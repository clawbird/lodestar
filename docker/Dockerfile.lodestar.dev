
# --platform=$BUILDPLATFORM is used build javascript source with host arch
# Otherwise TS builds on emulated archs and can be extremely slow (+1h)
FROM --platform=${BUILDPLATFORM:-amd64} node:20-alpine as build_src

ARG COMMIT
ARG NODE_ENV=${NODE_ENV}
ARG PUBLIC_IP_ADDRESS=${PUBLIC_IP_ADDRESS}
ARG HOST=${HOST}

ARG PATH_PROJECT=/eip-x
ARG PATH_MAIN=${PATH_PROJECT}/lodestar

ARG BRANCH_NAME=eip-x
ARG REPO_URL="https://github.com/clawbird/lodestar.git"

ENV PATH=${PATH_MAIN}/node_modules/.bin:$PATH \
  DEBIAN_FRONTEND=noninteractive \
  LANG=C.UTF-8 \
  NODE_ENV=${NODE_ENV} \
  PUBLIC_IP_ADDRESS=${PUBLIC_IP_ADDRESS} \
  HOST=${HOST}

ENV HOME /${PATH_PROJECT}

WORKDIR ${PATH_PROJECT}
RUN apk update && \
  ls -al && \
  apk add --no-cache g++ make python3 && \
  apk add --no-cache git curl wget jq lsof unzip vim sudo && \
  rm -rf /var/cache/apk/*

# COPY . ${PATH_MAIN}

RUN cd ${PATH_PROJECT} && \
  git clone ${REPO_URL} && \
  cd lodestar && \
  git fetch origin ${BRANCH_NAME}:${BRANCH_NAME} && \
  git checkout ${BRANCH_NAME} && \
  yarn --version && \
  yarn install --non-interactive --frozen-lockfile && \
  yarn build && \
  # To have access to the specific branch and commit used to build this source,
  # a git-data.json file is created by persisting git data at build time. Then,
  # a version string like `v0.35.0-beta.0/HEAD/82219149 (git)` can be shown in
  # the terminal and in the logs; which is very useful to track tests better.
  cd ${PATH_MAIN}/packages/cli && GIT_COMMIT=${COMMIT} yarn write-git-data && \
  # Do yarn --force to trigger a rebuild of the native packages
  # Emmulates `yarn rebuild` which is not available in v1 https://yarnpkg.com/cli/rebuild 
  yarn install --non-interactive --frozen-lockfile --production --force --network-timeout 1000000000 && \
  # Rebuild leveldb bindings (required for arm64 build)
  cd ${PATH_MAIN}/node_modules/classic-level && \
  yarn rebuild && \
  node ${PATH_MAIN}/packages/cli/bin/lodestar --help

# NodeJS applications have a default memory limit of 2.5GB.
# This limit is bit tight for a Prater node, it is recommended to raise the limit
# since memory may spike during certain network conditions.
ENV NODE_OPTIONS="--no-huge-max-old-generation-size --max-old-space-size=8192"

EXPOSE 5000 5500 8588 9596 30606

CMD tail -f /dev/null
